name: GetACar Web Client CI/CD

on:
  push:
    branches:
      - master # master 브랜치에 PUSH 됐을 때 실행

jobs:
  build:
    runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신 (18.04)
    steps:
      - name: Checkout Souce code # Repository 체크아웃
        uses: actions/checkout@master

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies # Dependency 설치
        run: yarn

      - name: Build react source # React 소스 빌드
        env:
          CI: false
          REACT_APP_APP_ENV: production
          REACT_APP_SERVER_API_BASE: 'https://gmy6hglywe.execute-api.ap-northeast-2.amazonaws.com/prod'
        run: yarn build

      - name: Configure AWS credentials # AWS 인증 정보 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3 # S3에 배포
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
           build s3://getacar-client

      - name: Cloudfront path invalidate # Invalidate Cloudfront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: 'ap-northeast-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}